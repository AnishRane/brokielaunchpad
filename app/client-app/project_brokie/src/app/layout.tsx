'use client';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import './globals.css';
import { TonConnect, TonConnectUIProvider } from '@tonconnect/ui-react';
import { createContext, useEffect, useState } from 'react';
import { useTonConnect } from '@/hooks/useTonConnect';
import { Provider } from 'react-redux';
import store from '@/services/store';

const inter = Inter({ subsets: ['latin'] });
const GlobalContext = createContext('' as any);

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [openModal, setOpenModal] = useState(false);
  const [openMenu, setOpenMenu] = useState(false);

  const { tonConnect, error } = useTonConnect(
    process.env.NEXT_PUBLIC_TON_MANIFEST,
  );

  const value = {
    openModal,
    setOpenModal,
    openMenu,
    setOpenMenu,
  };

  return (
    <html lang="en">
      <head>{/* Additional head elements */}</head>
      <Provider store={store}>
        <TonConnectUIProvider
          manifestUrl={process.env.NEXT_PUBLIC_TON_MANIFEST}
        >
          <GlobalContext.Provider value={value}>
            <body className={inter.className}>{children}</body>
          </GlobalContext.Provider>
        </TonConnectUIProvider>
      </Provider>
    </html>
  );
}
